{"version":3,"file":"TagItem.js","sourceRoot":"../src/","sources":["components/pickers/TagPicker/TagItem.tsx"],"names":[],"mappings":";;;;AAAA,6BAA+B;AAE/B,gDAAgE;AAChE,0CAA6C;AAG7C,mDAA6C;AAC7C,qDAA8C;AAE9C,IAAM,aAAa,GAAG,8BAAkB,EAAsC,CAAC;AAE/E;;GAEG;AACI,IAAM,WAAW,GAAG,UAAC,KAAoB;IAE5C,IAAA,KAAK,GAWH,KAAK,MAXF,EACL,MAAM,GAUJ,KAAK,OAVD,EACN,QAAQ,GASN,KAAK,SATC,EACR,QAAQ,GAQN,KAAK,SARC,EACR,8BAA8B,GAO5B,KAAK,+BAPuB,EAC9B,QAAQ,GAMN,KAAK,SANC,EACR,SAAS,GAKP,KAAK,UALE,EACT,KAAK,GAIH,KAAK,MAJF,EACL,YAAY,GAGV,KAAK,aAHK,EACZ,qBAAqB,GAEnB,KAAK,sBAFc,EACrB,KACE,KAAK,MADsE,EAA7E,KAAK,mBAAG,OAAO,KAAK,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAA,CACrE;IAEV,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;QACvC,KAAK,EAAE,KAAM;QACb,SAAS,WAAA;QACT,QAAQ,UAAA;QACR,QAAQ,UAAA;KACT,CAAC,CAAC;IAEH,IAAM,MAAM,GAAG,mBAAK,EAAE,CAAC;IAEvB,IAAM,aAAa,GAAG,8BAA8B;QAClD,CAAC,CAAC;YACE,eAAe,EAAE,QAAQ;YACzB,QAAQ,EAAE,CAAC;SACZ;QACH,CAAC,CAAC;YACE,QAAQ,EAAE,QAAQ;SACnB,CAAC;IAEN,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,KAAK;QAC3D,8BAAM,SAAS,EAAE,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAK,MAAM,UAAO,IACjE,QAAQ,CACJ;QACP,oBAAC,mBAAU,qBACT,EAAE,EAAE,MAAM,EACV,OAAO,EAAE,YAAY,IACjB,aAAa,IACjB,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,EACzE,SAAS,EAAE,UAAU,CAAC,KAAK,EAC3B,SAAS,EAAE,qBAAqB,qBACZ,MAAM,SAAI,MAAM,UAAO,0BACrB,KAAK,IAC3B,CACE,CACP,CAAC;AACJ,CAAC,CAAC;AAlDW,QAAA,WAAW,eAkDtB;AAEW,QAAA,OAAO,GAAG,kBAAM,CAAoD,mBAAW,EAAE,0BAAS,EAAE,SAAS,EAAE;IAClH,KAAK,EAAE,SAAS;CACjB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\n\nimport { ITagItemProps, ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\nimport { getStyles } from './TagItem.styles';\nimport { useId } from '@fluentui/react-hooks';\n\nconst getClassNames = classNamesFunction<ITagItemStyleProps, ITagItemStyles>();\n\n/**\n * {@docCategory TagPicker}\n */\nexport const TagItemBase = (props: ITagItemProps) => {\n  const {\n    theme,\n    styles,\n    selected,\n    disabled,\n    enableTagFocusInDisabledPicker,\n    children,\n    className,\n    index,\n    onRemoveItem,\n    removeButtonAriaLabel,\n    title = typeof props.children === 'string' ? props.children : props.item.name,\n  } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n  });\n\n  const itemId = useId();\n\n  const disabledAttrs = enableTagFocusInDisabledPicker\n    ? {\n        'aria-disabled': disabled,\n        tabindex: 0,\n      }\n    : {\n        disabled: disabled,\n      };\n\n  return (\n    <div className={classNames.root} role={'listitem'} key={index}>\n      <span className={classNames.text} title={title} id={`${itemId}-text`}>\n        {children}\n      </span>\n      <IconButton\n        id={itemId}\n        onClick={onRemoveItem}\n        {...disabledAttrs}\n        iconProps={{ iconName: 'Cancel', styles: { root: { fontSize: '12px' } } }}\n        className={classNames.close}\n        ariaLabel={removeButtonAriaLabel}\n        aria-labelledby={`${itemId} ${itemId}-text`}\n        data-selection-index={index}\n      />\n    </div>\n  );\n};\n\nexport const TagItem = styled<ITagItemProps, ITagItemStyleProps, ITagItemStyles>(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem',\n});\n"]}